{"version":3,"sources":["components/Home.js","components/QuestionAnswerButton.js","components/QuestionCard.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","QuestionAnswerButton","question","answers","questionNumber","totalQuestionCount","userAnswer","onClickQuestionAnswer","map","answer","index","correct","correctAnswer","disabled","value","onClick","QuestionCard","useState","questions","setQuestions","number","setNumber","score","setScore","userAnswers","setUserAnswers","isLoading","setIsLoading","isGameOver","setIsGameOver","useEffect","fetchData","then","data","results","shuffleAnswers","incorrect_answers","correct_answer","a","fetch","json","arr","sort","Math","random","undefined","e","target","isCorrectAnswer","prev","answerObj","length","setTimeout","alert","TOTAL_QUESTION_COUNT","nextQuestion","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9263e44b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"quiz\">Quiz</h1>\r\n            <div className=\"home-container\">\r\n                <p>This is a practice tool</p>\r\n            </div>\r\n            <button>\r\n\r\n            <Link className=\"start-btn\" to=\"/quiz\">Get Started</Link>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst QuestionAnswerButton = ({\r\n    question,\r\n    answers,\r\n    questionNumber,\r\n    totalQuestionCount,\r\n    userAnswer,\r\n    onClickQuestionAnswer\r\n    }) => {\r\n    return (\r\n        <div className=\"question-container\">\r\n            <p className=\"question\">{question}</p>\r\n\r\n            <p className=\"number\">\r\n                Question: {questionNumber} / {totalQuestionCount}\r\n            </p>\r\n\r\n            {answers.map((answer, index) => {\r\n                if (!userAnswer) {\r\n                    return <button key={index} className={\"answer-btn\"} disabled={userAnswer ? true : false}\r\n                        value={answer}\r\n                        onClick={onClickQuestionAnswer}>\r\n                            {answer}\r\n                        </button>\r\n                }\r\n                else {\r\n                    const correct = userAnswer.correctAnswer === answer;\r\n\r\n                    return <button key={index} className={\"answer-btn\" + (correct? \"-correct\" : \"\")} disabled={userAnswer ? true : false}\r\n                        value={answer}\r\n                        onClick={onClickQuestionAnswer}>\r\n                            {answer}\r\n                        </button>\r\n                }\r\n\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionAnswerButton;","import React, { useState, useEffect } from \"react\";\r\nimport QuestionAnswerButton from \"./QuestionAnswerButton\";\r\n\r\nconst TOTAL_QUESTION_COUNT = 10;\r\n\r\nconst QuestionCard = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [number, setNumber] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [userAnswers, setUserAnswers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n\r\n        fetchData()\r\n        .then(data => {\r\n            const questions = data.results.map(question => {\r\n                return {\r\n                    ...question,\r\n                    answers: shuffleAnswers([...question.incorrect_answers, question.correct_answer])\r\n                }\r\n            })\r\n\r\n            setQuestions(questions);\r\n            setIsLoading(false);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const fetchData = async() => {\r\n        const url = \"https://opentdb.com/api.php?amount=10&category=18&difficulty=hard\";\r\n\r\n        const data = await(await fetch(url)).json();\r\n        return data;\r\n    };\r\n\r\n    const shuffleAnswers = (arr) => {\r\n        return [...arr].sort(() => Math.random() - 0.5);\r\n    };\r\n\r\n    const handleQuestionAnswerClick = (e) => {\r\n        const answer = e.target.value;\r\n\r\n        const isCorrectAnswer = questions[number].correct_answer === answer;\r\n\r\n        if (isCorrectAnswer) { \r\n            setScore(prev => prev + 1);\r\n        }\r\n\r\n        const answerObj = {\r\n            question: questions[number].question,\r\n            answer,\r\n            isCorrectAnswer,\r\n            correctAnswer: questions[number].correct_answer\r\n        };\r\n\r\n        setUserAnswers(prev => [...prev, answerObj]);\r\n\r\n        if (userAnswers.length + 1=== TOTAL_QUESTION_COUNT) {\r\n            setTimeout(() => {\r\n                alert(\"idk just keep studying evne if you got 10/10\");\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        const nextQuestion = number + 1;\r\n\r\n        if (nextQuestion === TOTAL_QUESTION_COUNT) {\r\n            setIsGameOver(true);\r\n        }\r\n\r\n        else {\r\n            setNumber(nextQuestion);\r\n        }\r\n    };\r\n\r\n    const handleQuitClick = () => {\r\n        alert(\"quit\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <p className=\"score\">Your Score: {score}</p>\r\n                {isLoading && <p>Loading....</p>}\r\n                {!isLoading &&\r\n                <QuestionAnswerButton\r\n                    question={questions[number].question}\r\n                    answers={questions[number].answers}\r\n                    questionNumber={number + 1}\r\n                    userAnswer={userAnswers ? userAnswers[number] : undefined}\r\n                    totalQuestionCount={TOTAL_QUESTION_COUNT}\r\n                    onClickQuestionAnswer={handleQuestionAnswerClick}\r\n                />\r\n                }\r\n            </div>\r\n            <div className=\"navigation-container\">\r\n                <button className=\"quit-btn\" onClick={handleQuitClick}>Quit</button>\r\n                {(!isGameOver && !isLoading && number !== TOTAL_QUESTION_COUNT - 1) &&\r\n                    <button className=\"next-btn\" onClick={handleNextClick}>Next</button>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionCard;","import React, { useState } from \"react\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter, HashRouter, HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport QuestionCard from \"./components/QuestionCard\";\n\nconst App = () => {\n\n  return (\n    <div className=\"container\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/quiz\" component={QuestionCard}/> \n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}